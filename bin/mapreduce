#!/bin/bash
# mapreduce

# Stop on errors
# See https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -Eeuo pipefail

# Sanity check command line options
usage() {
  echo "Usage: $0 (start|stop|status|restart)"
}

if [ $# -ne 1 ]; then
  usage
  exit 1
fi

case $1 in
  "start")
    if pgrep -f mapreduce-manager &> /dev/null; then
        echo "Error: mapreduce-manager is already running"
        exit 1
    elif ppgrep -f mapreduce-worker &> /dev/null; then
        echo "Error: mapreduce-worker is already running"
        exit 1
    else
        echo "starting mapreduce ..."
        mapreduce-manager 6000 5999 &
        sleep 2
        mapreduce-worker 6000 5999 6001 &
        mapreduce-worker 6000 5999 6002 &
    fi
    ;;

  "stop")
    # Detect GNU vs BSD netcat. We need netcat to close the connection after
    # sending a message, which requires different options.
    echo "stopping mapreduce ..."
    set +o pipefail  # Avoid erroneous failures due to grep returning non-zero
    if nc -h 2>&1 | grep -q "\-c"; then
    NC="nc -c"
    elif nc -h 2>&1 | grep -q "\-N"; then
    NC="nc -N"
    elif nc -h 2>&1 | grep -q "\-C"; then
    NC="nc -C"
    else
    echo "Error detecting netcat version."
    exit 1
    fi
    set -o pipefail

    echo '{"message_type": "shutdown"}' | $NC localhost 6000 || true
    sleep 2  # give the manager time to receive signal and send to workers

    # Check if the Manager and Workers have shut down
    if pgrep -f mapreduce-manager &> /dev/null; then
        echo "killing mapreduce manager ..."
        pkill -f mapreduce-manager || true
    fi
    if pgrep -f mapreduce-worker &> /dev/null; then
        echo "killing mapreduce worker ..."
        pkill -f mapreduce-worker || true
    fi
    ;;

  "status")
    if pgrep -f mapreduce-manager &> /dev/null; then
        echo "manager running"
    else
        echo "manager not running"
    fi
    if pgrep -f mapreduce-worker &> /dev/null; then
        echo "workers running"
    else 
        echo "workers not running"
    fi
    
    ;;

  "restart")
    ./bin/mapreduce stop
    ./bin/mapreduce start
    ;;
  *)
    usage
    exit 1
    ;;
esac